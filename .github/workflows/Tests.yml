name: Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [1.6, 1.7]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1.0.0
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
      - name: install mpi
        run: sudo apt-get update
      - run: sudo apt-get install -y mpich
      - name: download miniconda manually
        run: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
      - name: run install
        run: bash Miniconda3-latest-Linux-x86_64.sh -b -p ~/miniconda

      - name: run path export
        run: export PATH=~/miniconda/bin:${PATH}
      - run: julia --color=yes --project -e 'import Pkg; Pkg.add("Conda"); using Conda; print(joinpath(Conda.PYTHONDIR,"python3"))'
      - run: export PYTHON=`julia --color=yes --project -e 'import Pkg; Pkg.add("Conda"); using Conda; print(joinpath(Conda.PYTHONDIR,"python3"))'`
      - run: julia --color=yes --project -e 'using Pkg; if VERSION >= v"1.1.0-rc1"; Pkg.build(verbose=true); else Pkg.build(); end'
      - run: julia --color=yes --project -e 'using Pkg; Pkg.build("PyCall")'
      - run: julia --color=yes --check-bounds=yes --inline=yes --project -e 'using Pkg; Pkg.test(coverage=true)'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
