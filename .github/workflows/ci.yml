name: CI
on:
  push:
    branches: [master,config-dict-ci]
    tags: ["*"]
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.9
          - 1 # automatically expands to the latest stable 1.x release of Julia
        os:
          - ubuntu-latest
        arch:
          - x64
        pro:
          - 'devito'
          - 'devitopro'
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - name: install mpi
        run: sudo apt-get update
      - run: sudo apt-get install -y mpich libmpich-dev
      - name: download miniconda manually
        run: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
      - name: run install
        run: bash Miniconda3-latest-Linux-x86_64.sh -b -p ~/miniconda
      - name: run path export
        run: export PATH=~/miniconda/bin:${PATH}
      - name: use system MPI
        run: julia -e 'using Pkg; Pkg.add(["MPI", "MPIPreferences"]); using MPIPreferences; MPIPreferences.use_system_binary()'
      - run: julia --color=yes --project -e 'using Pkg; if VERSION >= v"1.1.0-rc1"; Pkg.build(verbose=true); else Pkg.build(); end'
        shell: bash
        env:
          PYTHON: '~/miniconda/bin/python3'
      - run: julia --color=yes --check-bounds=yes --inline=yes --project -e 'using Pkg; Pkg.test(coverage=true)'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - name: install mpi
        run: sudo apt-get update
      - run: sudo apt-get install -y mpich
      - name: download miniconda manually
        run: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
      - name: run install
        run: bash Miniconda3-latest-Linux-x86_64.sh -b -p ~/miniconda
      - name: run path export
        run: export PATH=~/miniconda/bin:${PATH}
      - run: julia --color=yes --project -e 'using Pkg; if VERSION >= v"1.1.0-rc1"; Pkg.build(verbose=true); else Pkg.build(); end'
        shell: bash
        env:
          PYTHON: '~/miniconda/bin/python3'
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}